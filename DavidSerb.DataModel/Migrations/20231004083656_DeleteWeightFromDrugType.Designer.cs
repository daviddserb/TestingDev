// <auto-generated />
using DavidSerb.DataModel.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DavidSerb.DataModel.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231004083656_DeleteWeightFromDrugType")]
    partial class DeleteWeightFromDrugType
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DavidSerb.DataModel.Models.Country", b =>
                {
                    b.Property<string>("CountryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DepotId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CountryId");

                    b.HasIndex("CountryName")
                        .IsUnique();

                    b.HasIndex("DepotId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("DavidSerb.DataModel.Models.Depot", b =>
                {
                    b.Property<string>("DepotId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DepotName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepotId");

                    b.ToTable("Depots");
                });

            modelBuilder.Entity("DavidSerb.DataModel.Models.DrugType", b =>
                {
                    b.Property<string>("DrugTypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DrugTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DrugTypeId");

                    b.ToTable("DrugTypes");
                });

            modelBuilder.Entity("DavidSerb.DataModel.Models.DrugUnit", b =>
                {
                    b.Property<string>("DrugUnitId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DepotId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DrugTypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PickNumber")
                        .HasColumnType("int");

                    b.Property<string>("SiteId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DrugUnitId");

                    b.HasIndex("DepotId");

                    b.HasIndex("DrugTypeId");

                    b.HasIndex("SiteId");

                    b.ToTable("DrugUnits");
                });

            modelBuilder.Entity("DavidSerb.DataModel.Models.Site", b =>
                {
                    b.Property<string>("SiteId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CountryCode")
                        .HasColumnName("CountryCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SiteName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SiteId");

                    b.HasIndex("CountryCode");

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("DavidSerb.DataModel.Models.Country", b =>
                {
                    b.HasOne("DavidSerb.DataModel.Models.Depot", "Depot")
                        .WithMany("Countries")
                        .HasForeignKey("DepotId");
                });

            modelBuilder.Entity("DavidSerb.DataModel.Models.DrugUnit", b =>
                {
                    b.HasOne("DavidSerb.DataModel.Models.Depot", "Depot")
                        .WithMany()
                        .HasForeignKey("DepotId");

                    b.HasOne("DavidSerb.DataModel.Models.DrugType", "DrugType")
                        .WithMany()
                        .HasForeignKey("DrugTypeId");

                    b.HasOne("DavidSerb.DataModel.Models.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId");
                });

            modelBuilder.Entity("DavidSerb.DataModel.Models.Site", b =>
                {
                    b.HasOne("DavidSerb.DataModel.Models.Country", "Country")
                        .WithMany("Sites")
                        .HasForeignKey("CountryCode");
                });
#pragma warning restore 612, 618
        }
    }
}
